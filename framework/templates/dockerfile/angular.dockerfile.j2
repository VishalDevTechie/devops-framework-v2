# Multi-stage build for Angular application
FROM node:{{ node_version }}-alpine as build

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --prefer-offline --no-audit --no-fund

# Copy source code
COPY . .

# Build application
RUN npm run build:prod 2>/dev/null || npm run build

# Production stage with nginx
FROM nginx:alpine

# Remove default nginx static resources
RUN rm -rf /usr/share/nginx/html/*

# Copy built application
COPY --from=build /app/{{ build_dir }} /usr/share/nginx/html

# Create nginx configuration for Angular routing
RUN echo 'server { \
    listen {{ port }}; \
    server_name localhost; \
    location / { \
        root /usr/share/nginx/html; \
        index index.html index.htm; \
        try_files $uri $uri/ /index.html; \
    } \
    # Enable gzip compression \
    gzip on; \
    gzip_types text/plain application/json application/javascript text/css application/xml text/xml application/xml+rss text/javascript; \
}' > /etc/nginx/conf.d/default.conf

# Expose port
EXPOSE {{ port }}

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:{{ port }}/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]